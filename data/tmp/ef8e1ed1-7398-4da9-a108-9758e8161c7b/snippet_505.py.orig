class TBD7: # pragma: no cover
 # pragma: no cover
    def __init__(self, *args, **kwargs): # pragma: no cover
        pass # pragma: no cover
 # pragma: no cover
class TBD6: # pragma: no cover
 # pragma: no cover
    def __init__(self, *args, **kwargs): # pragma: no cover
        pass # pragma: no cover
 # pragma: no cover
    def __call__(self, arg0): # pragma: no cover
        return TBD7() # pragma: no cover
 # pragma: no cover
class TBD5: # pragma: no cover
 # pragma: no cover
    def __init__(self, *args, **kwargs): # pragma: no cover
        pass # pragma: no cover
 # pragma: no cover
class TBD4: # pragma: no cover
 # pragma: no cover
    def __init__(self, *args, **kwargs): # pragma: no cover
        pass # pragma: no cover
 # pragma: no cover
    def __call__(self, arg0, arg1, arg2): # pragma: no cover
        return TBD5() # pragma: no cover
 # pragma: no cover
class TBD3: # pragma: no cover
 # pragma: no cover
    def __init__(self, *args, **kwargs): # pragma: no cover
        pass # pragma: no cover
 # pragma: no cover
class TBD2: # pragma: no cover
 # pragma: no cover
    def __init__(self, *args, **kwargs): # pragma: no cover
        pass # pragma: no cover
 # pragma: no cover
    def __call__(self, figsize=None): # pragma: no cover
        return TBD3() # pragma: no cover
 # pragma: no cover
class TBD1: # pragma: no cover
 # pragma: no cover
    def __init__(self, *args, **kwargs): # pragma: no cover
        self.title = TBD6() # pragma: no cover
        self.subplot = TBD4() # pragma: no cover
        self.figure = TBD2() # pragma: no cover
        pass # pragma: no cover
plt = TBD1() # pragma: no cover
__original_start_marker = None # pragma: no cover
plt.figure(figsize=(16, 8))
for i in range(1, 7):
    plt.subplot(2, 3, i)
    plt.title('Histogram of {}'.format(str(i)))
    plt.hist(x[:, i - 1], bins=60)